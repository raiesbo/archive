[{"D:\\CODES\\projects\\devWebArchive\\client\\src\\pages\\home.page.jsx":"1","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\project.component.jsx":"2","D:\\CODES\\projects\\devWebArchive\\client\\src\\App.js":"3","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\projects.component.jsx":"4","D:\\CODES\\projects\\devWebArchive\\client\\src\\index.js":"5","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\footer.component.jsx":"6","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\navbar.component.jsx":"7","D:\\CODES\\projects\\devWebArchive\\client\\src\\pages\\admin.page.jsx":"8","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\login.component.jsx":"9","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\signup.component.jsx":"10","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\newProjectTemplate.component.jsx":"11","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\projectsList.component.jsx":"12","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\admProjects.component.jsx":"13","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\updateProjectTemplate.component.jsx":"14"},{"size":711,"mtime":1612525759628,"results":"15","hashOfConfig":"16"},{"size":1315,"mtime":1612538663510,"results":"17","hashOfConfig":"16"},{"size":1302,"mtime":1612701001710,"results":"18","hashOfConfig":"19"},{"size":3207,"mtime":1612652426811,"results":"20","hashOfConfig":"16"},{"size":599,"mtime":1611937637470,"results":"21","hashOfConfig":"16"},{"size":1603,"mtime":1612511206832,"results":"22","hashOfConfig":"19"},{"size":1347,"mtime":1612528572758,"results":"23","hashOfConfig":"16"},{"size":2569,"mtime":1612692125270,"results":"24","hashOfConfig":"16"},{"size":2553,"mtime":1612532989715,"results":"25","hashOfConfig":"16"},{"size":3085,"mtime":1612533011174,"results":"26","hashOfConfig":"16"},{"size":2159,"mtime":1612651165470,"results":"27","hashOfConfig":"16"},{"size":1759,"mtime":1612652381079,"results":"28","hashOfConfig":"16"},{"size":7161,"mtime":1612692515891,"results":"29","hashOfConfig":"16"},{"size":2430,"mtime":1612692559142,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"d2ixbq",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"1ejcdjl",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\CODES\\projects\\devWebArchive\\client\\src\\pages\\home.page.jsx",[],["65","66"],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\project.component.jsx",[],["67","68"],"D:\\CODES\\projects\\devWebArchive\\client\\src\\App.js",["69"],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\nimport Home from \"./pages/home.page\";\nimport Admin from \"./pages/admin.page\";\n\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  ////////////////////////////\n  //DARK MODE//LOCAL STORAGE//\n  ////////////////////////////\n\n  const [darkMode, setDarkMode] = useState(false);\n  let storedDarkMode = localStorage.getItem(\"darkMode\");\n\n  useEffect(() => {\n    if (storedDarkMode === \"true\") {\n      setDarkMode(true);\n      document.getElementById(\"body\").classList.toggle(\"darkmode\");\n    }\n  }, [])\n\n  const darkModeHandler = () => {\n    // CLICK ON TOGGLE HANDLER\n    setDarkMode(!darkMode)\n    document.getElementById(\"body\").classList.toggle(\"darkmode\");\n    localStorage.setItem(\"darkMode\", !darkMode)\n  }\n\n  // const url = \"http://localhost:5000/\";\n  const url = \"https://webdevarchive-server.herokuapp.com/\";\n\n\n  return (\n    <div className=\"App\">\n\n      <Switch>\n\n        <Route path=\"/admin/:action\" >\n          <Admin url={url}/>\n        </Route>\n\n        <Route path=\"/admin\" exact>\n          <Admin url={url}/>\n        </Route>\n\n        <Route path=\"/\" exact>\n          <Home darkModeHandler={darkModeHandler} url={url}/>\n        </Route>\n\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\projects.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\index.js",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\footer.component.jsx",[],["70","71"],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\navbar.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\pages\\admin.page.jsx",["72","73","74","75"],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\login.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\signup.component.jsx",["76"],"import Cookies from 'universal-cookie';\r\nimport { useState, useEffect } from 'react';\r\nimport \"./login.styles.css\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport default function SignUp({ url }) {\r\n\r\n    let history = useHistory();\r\n\r\n    // handle form data\r\n    const [formData, setFormData] = useState({});\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n    const handleUsername = (e) => setFormData({ ...formData, username: e.target.value });\r\n    const handleEmail = (e) => setFormData({ ...formData, email: e.target.value });\r\n    const handlePassword = (e) => setFormData({ ...formData, password: e.target.value });\r\n\r\n\r\n    const signupUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // reset errors\r\n        setEmailError(\"\")\r\n        setUsernameError(\"\")\r\n        setPasswordError(\"\")\r\n\r\n        // post data to server\r\n        try {\r\n            const res = await fetch(`${url}signup`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(formData),\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            // handle errors\r\n            if (data.errors) {\r\n                setEmailError(data.errors.email)\r\n                setUsernameError(data.errors.unsername)\r\n                setPasswordError(data.errors.password)\r\n            }\r\n\r\n            // handle signup\r\n            if (data.user) {\r\n                const cookie = new Cookies();\r\n                const maxAge = 3 * 24 * 60 * 60; // in Seconds\r\n                cookie.set('token', String(data.token), { path: '/', maxAge });\r\n                cookie.set('name', formData.username, { path: '/', maxAge });\r\n                // console.log(cookie.get('token'));\r\n                // console.log({user: data.user})\r\n                return history.push('/admin/projects')\r\n            }\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(\"ERROR: \", err)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"login-form\" onSubmit={signupUser} >\r\n\r\n            <div className=\"login-title\">Sign Up</div>\r\n\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input type=\"text\" name=\"username\" value={formData.username} onChange={handleUsername} autocomplete='off' />\r\n\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input type=\"email\" name=\"email\" value={formData.email} onChange={handleEmail} autocomplete='off' />\r\n\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input type=\"password\" name=\"password\" value={formData.password} onChange={handlePassword} autocomplete='off' />\r\n\r\n            <div className=\"username-error error\">{usernameError}</div>\r\n            <div className=\"email-error error\">{emailError}</div>\r\n            <div className=\"password-error error\">{passwordError}</div>\r\n\r\n            <button type=\"submit\">Submit</button>\r\n\r\n        </form>\r\n    )\r\n}\r\n","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\newProjectTemplate.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\projectsList.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\admProjects.component.jsx",["77","78","79"],"import { useState, useEffect } from 'react';\r\nimport \"./admProjects.styles.css\";\r\nimport NewProjectTemplate from \"./newProjectTemplate.component\";\r\nimport UpdateProjectTemplate from \"./updateProjectTemplate.component\";\r\nimport ProjectsList from \"./projectsList.component\";\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\n\r\nexport default function AdminProjects({ url, username }) {\r\n\r\n    const cookie = new Cookies();\r\n\r\n    const [projectsList, setProjectsList] = useState([]);\r\n    const [newProject, setNewProject] = useState({});\r\n    const [patchProject, setPatchProject] = useState({});\r\n    const [displayMode, setDisplayMode] = useState(\"projectsList\");\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [projectsList, username, url])\r\n\r\n    const fetchData = () => {\r\n        fetch(`${url}admin/${username}`)\r\n            .then(response => response.json())\r\n            .then(data => setProjectsList(data))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    ///////////////////\r\n    // display modes //\r\n    ///////////////////\r\n\r\n    const DISPLAY_MODES = {\r\n        projectsList: \"projectsList\",\r\n        newProject: \"newProject\",\r\n        updateProject: \"updateProject\"\r\n    }\r\n\r\n    const displayHandler = (newMode) => {\r\n        for (let mode of Object.keys(DISPLAY_MODES)) {\r\n            if (mode === newMode) {\r\n                setDisplayMode(newMode)\r\n            }\r\n        }\r\n    }\r\n\r\n    ////////////////////////\r\n    // create new project //\r\n    ////////////////////////\r\n\r\n    const createProject = e => {\r\n        e.preventDefault();\r\n\r\n        // processing links // same Item\r\n        newProject[\"links\"] = { github: newProject.linkGithub, website: newProject.linkWebsite };\r\n        // processing the tags // String -> Array\r\n        newProject.tags = newProject.tagsString.split(\",\").map(tag => tag.trim());\r\n\r\n        try {\r\n            const res = fetch(`${url}admin/`, {\r\n                method: \"post\",\r\n                body: JSON.stringify({ action: \"create\", project: { ...newProject, \"author\": username }, token: cookie.get('token') }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n            const data = res.json()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n        displayHandler(\"projectsList\")\r\n    }\r\n\r\n    ////////////////////\r\n    // delete project //\r\n    ////////////////////\r\n\r\n    const deleteProject = async (id) => {\r\n        try {\r\n            const res = await fetch(`${url}admin/`, {\r\n                method: \"post\",\r\n                body: JSON.stringify({ action: \"delete\", id: id, token: cookie.get('token') }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n            const data = await res.json()\r\n            fetchData()\r\n            console.log(data.message)\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    ////////////////////\r\n    // update project //\r\n    ////////////////////\r\n\r\n    const updateProject = (e) => {\r\n        e.preventDefault();\r\n\r\n        // processing the tags // String -> Array\r\n        patchProject.tags = patchProject.tagsString.split(\",\").map(tag => tag.trim());\r\n\r\n        const updateItem = {\r\n            name: patchProject.name,\r\n            description: patchProject.description,\r\n            tags: patchProject.tags,\r\n            date: patchProject.date,\r\n            links: patchProject.links\r\n        }\r\n\r\n        try {\r\n            const res = fetch(`${url}admin/`, {\r\n                method: \"post\",\r\n                body: JSON.stringify({ action: \"update\", id: patchProject._id, updates: { ...updateItem }, token: cookie.get('token') }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n            const data = res.json()\r\n            console.log(data)\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n        displayHandler(\"projectsList\")\r\n    }\r\n\r\n    const updateMode = (project) => {\r\n\r\n        const projectToUpdate = { ...project }\r\n        displayHandler(\"updateProject\");\r\n\r\n        projectToUpdate.tagsString = \"\";\r\n\r\n        for (let i = 0; i < projectToUpdate.tags.length; i++) {\r\n            if (i !== projectToUpdate.tags.length - 1) {\r\n                projectToUpdate.tagsString = `${projectToUpdate.tagsString} ${projectToUpdate.tags[i]},`\r\n            } else {\r\n                projectToUpdate.tagsString = `${projectToUpdate.tagsString} ${projectToUpdate.tags[i]}`\r\n            }\r\n        }\r\n        setPatchProject({ ...projectToUpdate })\r\n    }\r\n\r\n\r\n    ////////////////////\r\n    // display switch //\r\n    ////////////////////\r\n\r\n    const controlDisplay = () => {\r\n        let display = [];\r\n\r\n        // return Array: [0] = main component, [1] = side button\r\n        if (displayMode === \"newProject\") {\r\n            return (\r\n                display = [\r\n                    <NewProjectTemplate\r\n                        setNewProject={setNewProject}\r\n                        newProject={newProject}\r\n                        createProject={createProject}\r\n                        displayHandler={displayHandler}\r\n                    />,\r\n                    <button\r\n                        className=\"project-button\"\r\n                        onClick={() => displayHandler(\"projectsList\")}\r\n                    >Cancel new project</button>\r\n                ]\r\n            )\r\n        } else if (displayMode === \"updateProject\") {\r\n            return (\r\n                display = [\r\n                    <UpdateProjectTemplate\r\n                        setPatchProject={setPatchProject}\r\n                        patchProject={patchProject}\r\n                        updateProject={updateProject}\r\n                        displayHandler={displayHandler}\r\n                    />,\r\n                    <button\r\n                        className=\"project-button\"\r\n                        onClick={() => displayHandler(\"projectsList\")}\r\n                    >Cancel update</button>\r\n                ]\r\n            )\r\n        } else {\r\n            return (\r\n                display = [\r\n                    <ProjectsList\r\n                        projectsList={projectsList}\r\n                        deleteProject={deleteProject}\r\n                        updateMode={updateMode}\r\n                    />,\r\n                    <button\r\n                        className=\"project-button\"\r\n                        onClick={() => displayHandler(\"newProject\")}\r\n                    >Create new project</button>\r\n                ]\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"projectsList-container\">\r\n\r\n\r\n            <div className=\"current-projects\">\r\n                {controlDisplay()[0]}\r\n            </div>\r\n\r\n            <div className=\"control-panel\">\r\n                <div className=\"projects-num\">\r\n                    <h4 className=\"projects-num\">N° of projects: {projectsList.length}</h4>\r\n                </div>\r\n                {controlDisplay()[1]}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\updateProjectTemplate.component.jsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":27,"column":6,"nodeType":"88","endLine":27,"endColumn":8,"suggestions":"89"},{"ruleId":"80","replacedBy":"90"},{"ruleId":"82","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":14},{"ruleId":"92","severity":1,"message":"96","line":10,"column":33,"nodeType":"94","messageId":"95","endLine":10,"endColumn":36},{"ruleId":"86","severity":1,"message":"97","line":25,"column":5,"nodeType":"94","endLine":25,"endColumn":14,"suggestions":"98"},{"ruleId":"86","severity":1,"message":"99","line":25,"column":15,"nodeType":"100","endLine":33,"endColumn":6},{"ruleId":"92","severity":1,"message":"101","line":2,"column":20,"nodeType":"94","messageId":"95","endLine":2,"endColumn":29},{"ruleId":"86","severity":1,"message":"102","line":21,"column":8,"nodeType":"88","endLine":21,"endColumn":37,"suggestions":"103"},{"ruleId":"92","severity":1,"message":"104","line":68,"column":19,"nodeType":"94","messageId":"95","endLine":68,"endColumn":23},{"ruleId":"92","severity":1,"message":"105","line":191,"column":17,"nodeType":"94","messageId":"95","endLine":191,"endColumn":24},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],["106"],["107"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storedDarkMode'. Either include it or remove the dependency array.","ArrayExpression",["108"],["106"],["107"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'url' is defined but never used.","React Hook useEffect contains a call to 'setLogedIn'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cookie] as a second argument to the useEffect Hook.",["109"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["110"],"'data' is assigned a value but never used.","'display' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [storedDarkMode]",{"range":"117","text":"118"},"Add dependencies array: [cookie]",{"range":"119","text":"120"},"Update the dependencies array to be: [projectsList, username, url, fetchData]",{"range":"121","text":"122"},[590,592],"[storedDarkMode]",[1030,1030],", [cookie]",[715,744],"[projectsList, username, url, fetchData]"]