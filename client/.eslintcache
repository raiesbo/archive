[{"D:\\CODES\\projects\\devWebArchive\\client\\src\\pages\\home.page.jsx":"1","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\project.component.jsx":"2","D:\\CODES\\projects\\devWebArchive\\client\\src\\App.js":"3","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\projects.component.jsx":"4","D:\\CODES\\projects\\devWebArchive\\client\\src\\index.js":"5","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\footer.component.jsx":"6","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\navbar.component.jsx":"7","D:\\CODES\\projects\\devWebArchive\\client\\src\\pages\\admin.page.jsx":"8","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\login.component.jsx":"9","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\projects.component.jsx":"10","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\signup.component.jsx":"11"},{"size":1183,"mtime":1612013290188,"results":"12","hashOfConfig":"13"},{"size":1313,"mtime":1611135108981,"results":"14","hashOfConfig":"13"},{"size":1093,"mtime":1612266189189,"results":"15","hashOfConfig":"13"},{"size":3237,"mtime":1611586444636,"results":"16","hashOfConfig":"13"},{"size":599,"mtime":1611937637470,"results":"17","hashOfConfig":"13"},{"size":1582,"mtime":1611747595766,"results":"18","hashOfConfig":"13"},{"size":647,"mtime":1611747642522,"results":"19","hashOfConfig":"13"},{"size":1068,"mtime":1612377924175,"results":"20","hashOfConfig":"13"},{"size":2395,"mtime":1612428171390,"results":"21","hashOfConfig":"13"},{"size":164,"mtime":1612013474340,"results":"22","hashOfConfig":"13"},{"size":3015,"mtime":1612427751192,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ejcdjl",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"D:\\CODES\\projects\\devWebArchive\\client\\src\\pages\\home.page.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\project.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\App.js",["51"],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\nimport Home from \"./pages/home.page\";\nimport Admin from \"./pages/admin.page\";\n\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  ////////////////////////////\n  //DARK MODE//LOCAL STORAGE//\n  ////////////////////////////\n\n  const [darkMode, setDarkMode] = useState(false);\n  let storedDarkMode = localStorage.getItem(\"darkMode\");\n\n  useEffect(() => {\n    if (storedDarkMode === \"true\") {\n      setDarkMode(true);\n      document.getElementById(\"body\").classList.toggle(\"darkmode\");\n    }\n  }, [])\n\n  const darkModeHandler = () => {\n    // CLICK ON TOGGLE HANDLER\n    setDarkMode(!darkMode)\n    document.getElementById(\"body\").classList.toggle(\"darkmode\");\n    localStorage.setItem(\"darkMode\", !darkMode)\n  }\n\n\n  return (\n    <div className=\"App\">\n\n      <Switch>\n\n        <Route path=\"/admin\" exact>\n          <Admin />\n        </Route>\n\n        <Route path=\"/\" exact>\n          <Home darkModeHandler={darkModeHandler} />\n        </Route>\n\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\projects.component.jsx",[],["52","53"],"D:\\CODES\\projects\\devWebArchive\\client\\src\\index.js",[],["54","55"],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\footer.component.jsx",[],["56","57"],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\navbar.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\pages\\admin.page.jsx",["58","59"],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\login.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\projects.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\signup.component.jsx",["60"],"import Cookies from 'universal-cookie';\r\nimport { useState, useEffect } from 'react';\r\nimport \"./login.styles.css\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport default function SignUp() {\r\n\r\n    let history = useHistory();\r\n\r\n    // handle form data\r\n    const [formData, setFormData] = useState({});\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n    const handleUsername = (e) => setFormData({ ...formData, username: e.target.value });\r\n    const handleEmail = (e) => setFormData({ ...formData, email: e.target.value });\r\n    const handlePassword = (e) => setFormData({ ...formData, password: e.target.value });\r\n\r\n\r\n    const signupUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const url = \"http://localhost:5000/\"\r\n\r\n        // reset errors\r\n        setEmailError(\"\")\r\n        setUsernameError(\"\")\r\n        setPasswordError(\"\")\r\n\r\n        // post data to server\r\n        try {\r\n            const res = await fetch(`${url}signup`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(formData),\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            // handle errors\r\n            if (data.errors) {\r\n                setEmailError(data.errors.email)\r\n                setUsernameError(data.errors.unsername)\r\n                setPasswordError(data.errors.password)\r\n            }\r\n\r\n            // handle signup\r\n            if (data.user) {\r\n                const cookie = new Cookies();\r\n                const maxAge = 3 * 24 * 60 * 60; // in Seconds\r\n                cookie.set('token', String(data.token), { path: '/', maxAge });\r\n                // console.log(cookie.get('token'));\r\n                console.log({user: data.user})\r\n                return (\r\n                    history.push('/')\r\n                )\r\n            }\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(\"ERROR: \", err)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"login-form\" onSubmit={signupUser} >\r\n\r\n            <div className=\"login-title\">Sign Up</div>\r\n\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input type=\"text\" name=\"username\" value={formData.username} onChange={handleUsername} />\r\n\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input type=\"email\" name=\"email\" value={formData.email} onChange={handleEmail} />\r\n\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input type=\"password\" name=\"password\" value={formData.password} onChange={handlePassword} />\r\n\r\n            <div className=\"username-error error\">{usernameError}</div>\r\n            <div className=\"email-error error\">{emailError}</div>\r\n            <div className=\"password-error error\">{passwordError}</div>\r\n\r\n            <button type=\"submit\">Submit</button>\r\n\r\n        </form>\r\n    )\r\n}\r\n",{"ruleId":"61","severity":1,"message":"62","line":27,"column":6,"nodeType":"63","endLine":27,"endColumn":8,"suggestions":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"65","replacedBy":"71"},{"ruleId":"67","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":14},{"ruleId":"73","severity":1,"message":"77","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":14},{"ruleId":"73","severity":1,"message":"78","line":2,"column":20,"nodeType":"75","messageId":"76","endLine":2,"endColumn":29},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storedDarkMode'. Either include it or remove the dependency array.","ArrayExpression",["79"],"no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],["80"],["81"],"no-unused-vars","'SignUp' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'useEffect' is defined but never used.",{"desc":"82","fix":"83"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [storedDarkMode]",{"range":"84","text":"85"},[590,592],"[storedDarkMode]"]