[{"D:\\CODES\\projects\\devWebArchive\\client\\src\\pages\\home.page.jsx":"1","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\project.component.jsx":"2","D:\\CODES\\projects\\devWebArchive\\client\\src\\App.js":"3","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\projects.component.jsx":"4","D:\\CODES\\projects\\devWebArchive\\client\\src\\index.js":"5","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\footer.component.jsx":"6","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\navbar.component.jsx":"7","D:\\CODES\\projects\\devWebArchive\\client\\src\\pages\\admin.page.jsx":"8","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\login.component.jsx":"9","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\projects.component.jsx":"10","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\signup.component.jsx":"11","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\newProjectTemplate.component.jsx":"12","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\projectsList.component.jsx":"13"},{"size":711,"mtime":1612525759628,"results":"14","hashOfConfig":"15"},{"size":1315,"mtime":1612538663510,"results":"16","hashOfConfig":"15"},{"size":1238,"mtime":1612525735426,"results":"17","hashOfConfig":"15"},{"size":3237,"mtime":1611586444636,"results":"18","hashOfConfig":"15"},{"size":599,"mtime":1611937637470,"results":"19","hashOfConfig":"15"},{"size":1603,"mtime":1612511206832,"results":"20","hashOfConfig":"15"},{"size":1347,"mtime":1612528572758,"results":"21","hashOfConfig":"15"},{"size":2558,"mtime":1612530188991,"results":"22","hashOfConfig":"15"},{"size":2553,"mtime":1612532989715,"results":"23","hashOfConfig":"15"},{"size":2970,"mtime":1612633368773,"results":"24","hashOfConfig":"15"},{"size":3085,"mtime":1612533011174,"results":"25","hashOfConfig":"15"},{"size":2107,"mtime":1612633392543,"results":"26","hashOfConfig":"15"},{"size":1695,"mtime":1612632857088,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ejcdjl",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CODES\\projects\\devWebArchive\\client\\src\\pages\\home.page.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\project.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\App.js",["59"],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\nimport Home from \"./pages/home.page\";\nimport Admin from \"./pages/admin.page\";\n\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  ////////////////////////////\n  //DARK MODE//LOCAL STORAGE//\n  ////////////////////////////\n\n  const [darkMode, setDarkMode] = useState(false);\n  let storedDarkMode = localStorage.getItem(\"darkMode\");\n\n  useEffect(() => {\n    if (storedDarkMode === \"true\") {\n      setDarkMode(true);\n      document.getElementById(\"body\").classList.toggle(\"darkmode\");\n    }\n  }, [])\n\n  const darkModeHandler = () => {\n    // CLICK ON TOGGLE HANDLER\n    setDarkMode(!darkMode)\n    document.getElementById(\"body\").classList.toggle(\"darkmode\");\n    localStorage.setItem(\"darkMode\", !darkMode)\n  }\n\n  const url = \"http://localhost:5000/\";\n\n\n  return (\n    <div className=\"App\">\n\n      <Switch>\n\n        <Route path=\"/admin/:action\" >\n          <Admin url={url}/>\n        </Route>\n\n        <Route path=\"/admin\" exact>\n          <Admin url={url}/>\n        </Route>\n\n        <Route path=\"/\" exact>\n          <Home darkModeHandler={darkModeHandler} url={url}/>\n        </Route>\n\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\projects.component.jsx",[],["60","61"],"D:\\CODES\\projects\\devWebArchive\\client\\src\\index.js",[],["62","63"],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\footer.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\navbar.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\pages\\admin.page.jsx",["64","65","66"],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\login.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\projects.component.jsx",["67"],"import { useState, useEffect } from 'react';\r\nimport \"./projects.styles.css\";\r\nimport NewProjectTemplate from \"./newProjectTemplate.component\";\r\nimport ProjectsList from \"./projectsList.component\";\r\n\r\n\r\n\r\n\r\nexport default function AdminProjects({ url, username }) {\r\n\r\n    const [projectsList, setProjectsList] = useState([]);\r\n    const [newProject, setNewProject] = useState({});\r\n    const [newProjectMode, setNewProjectMode] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [projectsList, username, url])\r\n\r\n    const fetchData = () => {\r\n        fetch(`${url}admin/${username}`)\r\n            .then(response => response.json())\r\n            .then(data => setProjectsList(data))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    const modeHandler = () => {\r\n        setNewProjectMode(!newProjectMode);\r\n    }\r\n\r\n\r\n    const createProject = e => {\r\n        e.preventDefault();\r\n\r\n        // processing the data\r\n        newProject[\"links\"] = { github: newProject.linkGithub, website: newProject.linkWebsite };\r\n        newProject.tags = newProject.tagsString.split(\",\").map(tag => tag.trim());\r\n        console.log(newProject)\r\n\r\n        try {\r\n            const res = fetch(`${url}admin/`, {\r\n                method: \"post\",\r\n                body: JSON.stringify({ action: \"create\", project: { ...newProject, \"author\": username } }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n\r\n            });\r\n\r\n            const data = res.json()\r\n            console.log(data)\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const deleteProject = async (id) => {\r\n        try {\r\n            const res = await fetch(`${url}admin/`, {\r\n                method: \"post\",\r\n                body: JSON.stringify({ action: \"delete\", id: id }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n            const data = await res.json()\r\n            fetchData()\r\n            console.log(data.message)\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"projectsList-container\">\r\n\r\n\r\n            <div className=\"current-projects\">\r\n                {newProjectMode && <NewProjectTemplate setNewProject={setNewProject} newProject={newProject} createProject={createProject} modeHandler={modeHandler} />}\r\n                {!newProjectMode && <ProjectsList projectsList={projectsList} deleteProject={deleteProject} />}\r\n            </div>\r\n\r\n            <div className=\"control-panel\">\r\n                <div className=\"projects-num\">\r\n                    <h4 className=\"\">NÂ° of projects: {projectsList.length}</h4>\r\n                </div>\r\n                <button className=\"project-button\" onClick={modeHandler}>Create new project{/*<i class=\"fas fa-plus\"></i>*/}</button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\signup.component.jsx",["68"],"import Cookies from 'universal-cookie';\r\nimport { useState, useEffect } from 'react';\r\nimport \"./login.styles.css\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport default function SignUp({ url }) {\r\n\r\n    let history = useHistory();\r\n\r\n    // handle form data\r\n    const [formData, setFormData] = useState({});\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n    const handleUsername = (e) => setFormData({ ...formData, username: e.target.value });\r\n    const handleEmail = (e) => setFormData({ ...formData, email: e.target.value });\r\n    const handlePassword = (e) => setFormData({ ...formData, password: e.target.value });\r\n\r\n\r\n    const signupUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // reset errors\r\n        setEmailError(\"\")\r\n        setUsernameError(\"\")\r\n        setPasswordError(\"\")\r\n\r\n        // post data to server\r\n        try {\r\n            const res = await fetch(`${url}signup`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(formData),\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            // handle errors\r\n            if (data.errors) {\r\n                setEmailError(data.errors.email)\r\n                setUsernameError(data.errors.unsername)\r\n                setPasswordError(data.errors.password)\r\n            }\r\n\r\n            // handle signup\r\n            if (data.user) {\r\n                const cookie = new Cookies();\r\n                const maxAge = 3 * 24 * 60 * 60; // in Seconds\r\n                cookie.set('token', String(data.token), { path: '/', maxAge });\r\n                cookie.set('name', formData.username, { path: '/', maxAge });\r\n                // console.log(cookie.get('token'));\r\n                // console.log({user: data.user})\r\n                return history.push('/admin/projects')\r\n            }\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(\"ERROR: \", err)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"login-form\" onSubmit={signupUser} >\r\n\r\n            <div className=\"login-title\">Sign Up</div>\r\n\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input type=\"text\" name=\"username\" value={formData.username} onChange={handleUsername} autocomplete='off' />\r\n\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input type=\"email\" name=\"email\" value={formData.email} onChange={handleEmail} autocomplete='off' />\r\n\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input type=\"password\" name=\"password\" value={formData.password} onChange={handlePassword} autocomplete='off' />\r\n\r\n            <div className=\"username-error error\">{usernameError}</div>\r\n            <div className=\"email-error error\">{emailError}</div>\r\n            <div className=\"password-error error\">{passwordError}</div>\r\n\r\n            <button type=\"submit\">Submit</button>\r\n\r\n        </form>\r\n    )\r\n}\r\n","D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\newProjectTemplate.component.jsx",[],"D:\\CODES\\projects\\devWebArchive\\client\\src\\components\\admin\\projectsList.component.jsx",[],{"ruleId":"69","severity":1,"message":"70","line":27,"column":6,"nodeType":"71","endLine":27,"endColumn":8,"suggestions":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":10,"column":33,"nodeType":"81","messageId":"82","endLine":10,"endColumn":36},{"ruleId":"69","severity":1,"message":"83","line":25,"column":5,"nodeType":"81","endLine":25,"endColumn":14,"suggestions":"84"},{"ruleId":"69","severity":1,"message":"85","line":25,"column":15,"nodeType":"86","endLine":33,"endColumn":6},{"ruleId":"69","severity":1,"message":"87","line":18,"column":8,"nodeType":"71","endLine":18,"endColumn":37,"suggestions":"88"},{"ruleId":"79","severity":1,"message":"89","line":2,"column":20,"nodeType":"81","messageId":"82","endLine":2,"endColumn":29},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storedDarkMode'. Either include it or remove the dependency array.","ArrayExpression",["90"],"no-native-reassign",["91"],"no-negated-in-lhs",["92"],["91"],["92"],"no-unused-vars","'url' is defined but never used.","Identifier","unusedVar","React Hook useEffect contains a call to 'setLogedIn'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cookie] as a second argument to the useEffect Hook.",["93"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["94"],"'useEffect' is defined but never used.",{"desc":"95","fix":"96"},"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [storedDarkMode]",{"range":"101","text":"102"},"Add dependencies array: [cookie]",{"range":"103","text":"104"},"Update the dependencies array to be: [projectsList, username, url, fetchData]",{"range":"105","text":"106"},[590,592],"[storedDarkMode]",[1030,1030],", [cookie]",[504,533],"[projectsList, username, url, fetchData]"]